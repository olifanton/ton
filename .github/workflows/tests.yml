name: 'Tests'

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - '.gitattributes'
      - '.gitignore'
      - '.phpstorm.meta.php'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'README.md'
      - '.env.dist'
      - 'examples/**'

  pull_request:
    paths-ignore:
      - '.gitattributes'
      - '.gitignore'
      - '.phpstorm.meta.php'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'README.md'
      - '.env.dist'
      - 'examples/**'

jobs:
  tests:
    name: PHP ${{ matrix.php }}-${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

        php:
          - 8.1
          - 8.2
          - 8.3
          - 8.4

    env:
      extensions: xdebug
      TONCENTER_API_KEY: ${{ secrets.TONCENTER_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        env:
          update: true
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          tools: composer:v2

      - name: Setup composer cache directory
        if: matrix.os == 'ubuntu-latest'
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Cache dependencies installed with composer
        uses: actions/cache@v3
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php }}-composer-

      - name: Update composer
        run: composer self-update

      - name: Install dependencies with composer
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Prepare environment variables
        run: |
          cp .env.dist .env
          sed -i -e "s/\%TONCENTER_API_KEY\%/${{ env.TONCENTER_API_KEY }}/g" .env

      - name: Run Phplint
        run: |
          composer run phplint

      - name: Run Phpstan
        run: |
          composer run phpstan

      - name: Run tests with Phpunit
        run: |
          XDEBUG_MODE=coverage php vendor/bin/phpunit --testsuite unit
